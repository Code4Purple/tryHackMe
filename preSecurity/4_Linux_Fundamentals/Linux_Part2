## Accessing your Linux Machine Using SSH (Deploy)

### What is SSH & How does it work?

Secure Shell or SSH simply is a protocol between devices in an encrypted form. 
Using cryptography, any input we send in a human-readable format is encrypted for travelling over a network -- where it is then unencrypted once it reaches the remote machine.

You can learn about the various types of encryption on a TryHackMe room. But for now, we only need to understand that:
      SSH allows us to remotely execute commands on another device remotely.
      Any data sent between the devices is encrypted when it is sent over a network such as the Internet

### Using SSH to login to your linux machine

The syntax to use SSH is very simple. We only need to provide two things:

1. The IP address of the remote machine
2. Correct credentials to a valid account to login with on the remote machine

## More Commands

man < command > ; man ls   -> brings up the manual on how to use the ls command
< command > -- help        -> gives you the menu for that command 
ls -a or --all             -> gives light to hidden folders
ls -lh                     -> gives a list of permisions of all files in the directory


mkdir                      -> Makes Directory ( Folder )

touch <file name >            -> Creats file 
cp                            -> Copy a file or folder
mv                            -> Move a file or folder

rm                            -> Remove a file 
rm -r                         -> Allows you to remove folders

file                          -> Determine the type of file
cat  <file name>              -> prints out the contents of a file

su <user name>                -> Switchs users within the system
su <user name> *-l or login*  -> allows you to inherit alot more properties of the 
                                 new user like environment variables and the likes

sudo < Command >              -> Gives root permission to the commnad
sudo apt -install             -> allows you to install a package like git for example


## Briefly: The Differences Between Users & Groups

We briefly explored this in Linux fundamentals part 1 (namely, the differences between a regular user and a system user). The great thing about Linux is that permissions can be so granular, 
that whilst a user technically owns a file, if the permissions have been set, then a group of users can also have either the same or a different set of permissions to the exact same file without 
affecting the file owner itself.

Let's put this into a real-world context; the system user that runs a web server must have permissions to read and write files for an effective web application. However, 
companies such as web hosting companies will have to want to allow their customers to upload their own files for their website without being the webserver system user -- 
compromising the security of every other customer. 

We'll learn the commands necessary to switch between users below.


## Common Directories 

### /etc

This root directory is one of the most important root directories on your system. The etc folder (short for etcetera) is a commonplace location to store system files that are used by your operating system. 

For example, the sudoers file highlighted in the screenshot below contains a list of the users & groups that have permission to run sudo or a set of commands as the root user.

Also highlighted below are the "passwd" and "shadow" files. These two files are special for Linux as they show how your system stores the passwords for each user in encrypted formatting called sha512.


### /var

The "/var" directory, with "var" being short for variable data,  is one of the main root folders found on a Linux install. This folder stores data that is frequently accessed or written 
by services or applications running on the system. For example, log files from running services and applications are written here (/var/log), or other data that is not necessarily associated 
with a specific user (i.e., databases and the like).

### /root

Unlike the /home directory, the /root folder is actually the home for the "root" system user. There isn't anything more to this folder other than just understanding that this is the home directory 
for the "root" user. 
But, it is worth a mention as the logical presumption is that this user would have their data in a directory such as "/home/root" by default.  

### /tmp

This is a unique root directory found on a Linux install. Short for "temporary", the /tmp directory is volatile and is used to store data that is only needed to be accessed once or twice. 
Similar to the memory on your computer, once the computer is restarted, the contents of this folder are cleared out.

What's useful for us in pentesting is that any user can write to this folder by default. 
Meaning once we have access to a machine, it serves as a good place to store things like our enumeration scripts.
